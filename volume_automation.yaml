---
- name: EC2 Volume extend
  hosts: all
  become: true
  gather_facts: false
  vars_files:
    - aws_secrets.yml

  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key_id }}"
    AWS_DEFAULT_REGION: "{{ aws_default_region }}"

  tasks:

    - name: Gather EC2 instance ID
      amazon.aws.ec2_metadata_facts:
      register: ec2_metadata

    - name: Debug ec2_metadata
      debug:
         var: ec2_metadata

    - name: Get the EBS vols attached with EC2
      amazon.aws.ec2_instance_info:
        region: "{{ ec2_metadata.ansible_facts.ansible_ec2_instance_identity_document_region }}"
        filters:
          instance-id: "{{ ec2_metadata.ansible_facts.ansible_ec2_instance_identity_document_instanceid }}"
      register: ec2_facts

    - name: Debug ebs attached with EC2
      debug:
         var: ec2_facts

    - name: Get the EBS vols details
      amazon.aws.ec2_vol_info:
        region: "{{ ec2_metadata.ansible_facts.ansible_ec2_instance_identity_document_region }}"
        filters:
          attachment.instance_id: "{{ ec2_metadata.ansible_facts.ansible_ec2_instance_identity_document_instanceid }}"  # attachment.instance_id is a key that checks if the EBS volume is attached to an EC2 instance and if so, filters the volumes by that instance ID.
      register: ebs_volumes


    - name: Get the attached EBS vol tag details
      set_fact:
        tag_details: "{{ ebs_volumes.volumes | json_query('[?tags != `null`].{id: id, tags: tags}') }}"

    - name: Debug the tag names
      debug:
        msg: "{{ tag_details }}"

    - name: Find the specific EBS vol, where the volume needs to extend
      when: >
        tag_details is defined and
        tag_details | selectattr('tags.Name','search', mountPoint_name) | list | length > 0
      set_fact:
        vol_id: "{{ ( tag_details | selectattr('tags.Name','search', mountPoint_name) | map(attribute='id') | first ) }}"

    - name: Debug matched vol id
      debug:
        msg: "{{ vol_id }}"


    - name: Proceed further once found the volume which matches with the Mountpoint Name
      debug:
        msg: "Proceeding further as we have found a volume which matches with the Mountpoint name. Volume ID: {{ vol_id }} "

    - name: Get the instance ID
      set_fact:
        instance_id: "{{ ec2_facts.instances | json_query('[].instance_id') }}"

    - name: Debug instance_id value
      debug:
        msg: "{{ instance_id }}"

    - name: Resize the volume as requested
      amazon.aws.ec2_vol:
        instance: "{{ instance_id | first }}"
        id: "{{ vol_id }}"
        modify_volume: true
        volume_size: "{{ ec2_instance_volume_size }}"    # ec2_instance_volume_size: the value for this parameter will be passed from jenkins input using "disk_size" parameter
      register: resize_volume

    - name: Pause for 30 Secs
      pause:
        seconds: 30
        prompt: "Waiting for 30 Seconds. Volume is getting extended..."

    - name: getting the block device for the Mountpoint
      shell: "lsblk -o NAME,MOUNTPOINT | grep '{{mountPoint_name}}' | awk '{print $1}'"
      register: block_device
      changed_when: false

    - name: Getting the block device name
      set_fact:
        block_device_name: "{{ block_device.stdout }}"

     # - name: Rescan the block device
     # shell: sudo bash -c "echo 1 > /sys/class/block/{{ block_device_name }}/device/rescan"

    - name: Run the os end command to get the Filesystem type
      shell: " df -T {{mountPoint_name}}| tail -n 1 | awk '{print $2}' "
      register: fs_type

    - name: Getting the FS type
      set_fact:
        fs_type_name: "{{ fs_type.stdout }}"

    - name: Run the os end command to grow the FS when the FS type is 'xfs'
      shell: |
        xfs_growfs {{mountPoint_name}}
        df -hT {{mountPoint_name}}
      when: fs_type_name == 'xfs'
      register: xfs_extended

    - name: Debug the output after growing the FS
      debug:
        msg: "The xfs mountpoint: {{mountPoint_name}} has extended \n {{ xfs_extended }}"
      when: fs_type_name == 'xfs'

    - name: Run the os end command to grow the FS when the FS type is 'ext2' or 'ext3' or 'ext4'
      shell: |
        resize2fs {{mountPoint_name}}
        df -hT {{mountPoint_name}}
      when: fs_type_name in ['ext2', 'ext3', 'ext4']

    - name: Debug the output after growing the FS
      debug:
        msg: "The xfs mountpoint: {{mountPoint_name}} has extended"
      when: fs_type_name in ['ext2', 'ext3', 'ext4']
